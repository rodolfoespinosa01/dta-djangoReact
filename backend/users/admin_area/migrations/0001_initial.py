# Generated by Django 5.2 on 2025-05-06 08:56

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AccountHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("signup", "Signup"),
                            ("cancel", "Cancel Subscription"),
                            ("reactivate", "Reactivation"),
                        ],
                        max_length=20,
                    ),
                ),
                ("plan_name", models.CharField(max_length=30)),
                (
                    "stripe_subscription_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("subscription_start", models.DateTimeField(blank=True, null=True)),
                ("subscription_end", models.DateTimeField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="PasswordResetToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(max_length=64)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="PendingPlanActivation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plan_name", models.CharField(max_length=30)),
                (
                    "stripe_subscription_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("scheduled_start", models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name="PendingSignup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                ("session_id", models.CharField(max_length=255, unique=True)),
                (
                    "token",
                    models.CharField(default=uuid.uuid4, max_length=64, unique=True),
                ),
                ("plan", models.CharField(max_length=50)),
                (
                    "subscription_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_used", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Plan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("adminTrial", "Free Admin Trial"),
                            ("adminMonthly", "Monthly Admin Plan"),
                            ("adminQuarterly", "Quarterly Admin Plan"),
                            ("adminAnnual", "Annual Admin Plan"),
                        ],
                        max_length=30,
                        unique=True,
                    ),
                ),
                ("description", models.TextField()),
                ("stripe_price_id", models.CharField(max_length=100)),
                ("price_cents", models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("trial_start_date", models.DateTimeField(blank=True, null=True)),
                (
                    "subscription_started_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("next_billing_date", models.DateTimeField(blank=True, null=True)),
                (
                    "stripe_customer_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "stripe_subscription_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("auto_renew_cancelled", models.BooleanField(default=False)),
                ("is_canceled", models.BooleanField(default=False)),
                ("canceled_at", models.DateTimeField(blank=True, null=True)),
                ("subscription_end_date", models.DateTimeField(blank=True, null=True)),
            ],
        ),
    ]
